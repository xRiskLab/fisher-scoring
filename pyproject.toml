[project]
name = "fisher-scoring"
version = "2.0.4"
description = "A Python implementation of the Fisher Scoring algorithm for classification and incidence rate tasks."
authors = [
    { name = "xRiskLab", email = "contact@xrisklab.ai" }
]
license = "MIT"
readme = "README.md"
keywords = ["fisher scoring", "logistic regression", "maximum likelihood", "classification", "machine learning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence"
]
requires-python = ">=3.9"
dependencies = [
    "numpy>=1.19.5,<2.0.0",
    "pandas>=2.2.2,<3.0.0",
    "scikit-learn>=1.3.0,<2.0.0",
]

[project.urls]
Repository = "https://github.com/xRiskLab/fisher-scoring"
Homepage = "https://github.com/xRiskLab/fisher-scoring"

[dependency-groups]
dev = [
    "matplotlib>=3.0.0,<4.0.0",
    "black>=24.4.2,<25.0.0",
    "isort>=5.13.2,<6.0.0",
    "pylint>=3.2.6,<4.0.0",
    "pytest>=8.3.2,<9.0.0",
    "rich>=13.7.1,<14.0.0",
    "fixit>=2.1.0,<3.0.0",
    "pytest-mock>=3.14.0,<4.0.0",
    "pydocstyle>=6.3.0,<7.0.0",
    "docformatter>=1.7.5,<2.0.0",
]

[tool.setuptools]
packages = ["fisher_scoring"]
package-dir = { "" = "src" }

[tool.uv]
default-groups = ["dev"]

[tool.black]
line-length = 88

[tool.isort]
profile = "black"
line_length = 88

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.pylint.'MESSAGES CONTROL']
disable = ["C0413", "C0103", "E0213"]

[tool.pydocstyle]
convention = "google"

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true